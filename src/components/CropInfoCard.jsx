import React, { useEffect, useRef } from 'react'

const DATA = {
  wheat: {
    hi: { name: 'рдЧреЗрд╣реВрдВ', sow: 'рдирд╡рдВрдмрд░- рджрд┐рд╕рдВрдмрд░', harvest: 'рдорд╛рд░реНрдЪ- рдЕрдкреНрд░реИрд▓', irrigation: '15-20 рджрд┐рди рдореЗрдВ' },
    en: { name: 'Wheat', sow: 'Nov - Dec', harvest: 'Mar - Apr', irrigation: 'Every 15-20 days' },
    bn: { name: 'ржЧржо', sow: 'ржиржнрзЗржорзНржмрж░- ржбрж┐рж╕рзЗржорзНржмрж░', harvest: 'ржорж╛рж░рзНржЪ- ржПржкрзНрж░рж┐рж▓', irrigation: 'рззрзл-рзирзж ржжрж┐ржирзЗ' },
    mr: { name: 'рдЧрд╣реВ', sow: 'рдиреЛрд╡реНрд╣реЗрдВрдмрд░- рдбрд┐рд╕реЗрдВрдмрд░', harvest: 'рдорд╛рд░реНрдЪ- рдПрдкреНрд░рд┐рд▓', irrigation: 'резрел-реиреж рджрд┐рд╡рд╕рд╛рдВрдиреА' },
    pa: { name: 'риЧрй░ри╣рйВ', sow: 'риири╡рй░римри░- рижри╕рй░римри░', harvest: 'риори╛ри░риЪ- риЕрикрйНри░рйИри▓', irrigation: '15-20 рижри┐риири╛риВ ри╡ри┐риЪ' }
  },
  rice: {
    hi: { name: 'рдзрд╛рди', sow: 'рдЬреВрди- рдЬреБрд▓рд╛рдИ', harvest: 'рдЕрдХреНрдЯреВрдмрд░- рдирд╡рдВрдмрд░', irrigation: '7-10 рджрд┐рди рдореЗрдВ' },
    en: { name: 'Rice', sow: 'Jun - Jul', harvest: 'Oct - Nov', irrigation: 'Every 7-10 days' },
    bn: { name: 'ржзрж╛ржи', sow: 'ржЬрзБржи- ржЬрзБрж▓рж╛ржЗ', harvest: 'ржЕржХрзНржЯрзЛржмрж░- ржиржнрзЗржорзНржмрж░', irrigation: 'рзн-рззрзж ржжрж┐ржирзЗ' },
    mr: { name: 'рддрд╛рдВрджреВрд│', sow: 'рдЬреВрди- рдЬреБрд▓реИ', harvest: 'рдСрдХреНрдЯреЛрдмрд░- рдиреЛрд╡реНрд╣реЗрдВрдмрд░', irrigation: 'рен-резреж рджрд┐рд╡рд╕рд╛рдВрдиреА' },
    pa: { name: 'ризри╛рии', sow: 'риЬрйВрии- риЬрйБри▓ри╛риИ', harvest: 'риЕриХридрйВримри░- риири╡рй░римри░', irrigation: '7-10 рижри┐риири╛риВ ри╡ри┐риЪ' }
  },
  vegetables: {
    hi: { name: 'рд╕рдмреНрдЬрд╝рд┐рдпрд╛рдБ', sow: 'рдлрд╕рд▓ рдкрд░ рдирд┐рд░реНрднрд░', harvest: 'рдлрд╕рд▓ рдкрд░ рдирд┐рд░реНрднрд░', irrigation: '5-7 рджрд┐рди рдореЗрдВ' },
    en: { name: 'Vegetables', sow: 'Depends on crop', harvest: 'Depends on crop', irrigation: 'Every 5-7 days' },
    bn: { name: 'рж╕ржмржЬрж┐', sow: 'ржлрж╕рж▓рзЗрж░ ржЙржкрж░ ржирж┐рж░рзНржнрж░', harvest: 'ржлрж╕рж▓рзЗрж░ ржЙржкрж░ ржирж┐рж░рзНржнрж░', irrigation: 'рзл-рзн ржжрж┐ржирзЗ' },
    mr: { name: 'рднрд╛рдЬреАрдкрд╛рд▓рд╛', sow: 'рдкрд┐рдХрд╛рд╡рд░ рдЕрд╡рд▓рдВрдмреВрди', harvest: 'рдкрд┐рдХрд╛рд╡рд░ рдЕрд╡рд▓рдВрдмреВрди', irrigation: 'рел-рен рджрд┐рд╡рд╕рд╛рдВрдиреА' },
    pa: { name: 'ри╕римриЬри╝рйАриЖриВ', sow: 'рилри╕ри▓ ридрйЗ риири┐ри░ринри░', harvest: 'рилри╕ри▓ ридрйЗ риири┐ри░ринри░', irrigation: '5-7 рижри┐риири╛риВ ри╡ри┐риЪ' }
  },
  maize: {
    hi: { name: 'рдордХреНрдХрд╛', sow: 'рдЬреВрди- рдЬреБрд▓рд╛рдИ / рдлрд░рд╡рд░реА', harvest: 'рд╕рд┐рддрдВрдмрд░- рдЕрдХреНрдЯреВрдмрд░', irrigation: '10-12 рджрд┐рди рдореЗрдВ' },
    en: { name: 'Maize', sow: 'Jun - Jul / Feb', harvest: 'Sep - Oct', irrigation: 'Every 10-12 days' },
    bn: { name: 'ржнрзБржЯрзНржЯрж╛', sow: 'ржЬрзБржи- ржЬрзБрж▓рж╛ржЗ / ржлрзЗржмрзНрж░рзБржпрж╝рж╛рж░рж┐', harvest: 'рж╕рзЗржкрзНржЯрзЗржорзНржмрж░- ржЕржХрзНржЯрзЛржмрж░', irrigation: 'рззрзж-рззрзи ржжрж┐ржирзЗ' },
    mr: { name: 'рдордХрд╛', sow: 'рдЬреВрди- рдЬреБрд▓реИ / рдлреЗрдмреНрд░реБрд╡рд╛рд░реА', harvest: 'рд╕рдкреНрдЯреЗрдВрдмрд░- рдСрдХреНрдЯреЛрдмрд░', irrigation: 'резреж-резреи рджрд┐рд╡рд╕рд╛рдВрдиреА' },
    pa: { name: 'риорй▒риХрйА', sow: 'риЬрйВрии- риЬрйБри▓ри╛риИ / рилри░ри╡ри░рйА', harvest: 'ри╕ридрй░римри░- риЕриХридрйВримри░', irrigation: '10-12 рижри┐риири╛риВ ри╡ри┐риЪ' }
  },
  mustard: {
    hi: { name: 'рд╕рд░рд╕реЛрдВ', sow: 'рдЕрдХреНрдЯреВрдмрд░- рдирд╡рдВрдмрд░', harvest: 'рдлрд░рд╡рд░реА- рдорд╛рд░реНрдЪ', irrigation: '20-25 рджрд┐рди рдореЗрдВ' },
    en: { name: 'Mustard', sow: 'Oct - Nov', harvest: 'Feb - Mar', irrigation: 'Every 20-25 days' },
    bn: { name: 'рж╕рж░рж┐рж╖рж╛', sow: 'ржЕржХрзНржЯрзЛржмрж░- ржиржнрзЗржорзНржмрж░', harvest: 'ржлрзЗржмрзНрж░рзБржпрж╝рж╛рж░рж┐- ржорж╛рж░рзНржЪ', irrigation: 'рзирзж-рзирзл ржжрж┐ржирзЗ' },
    mr: { name: 'рдореЛрд╣рд░реА', sow: 'рдСрдХреНрдЯреЛрдмрд░- рдиреЛрд╡реНрд╣реЗрдВрдмрд░', harvest: 'рдлреЗрдмреНрд░реБ- рдорд╛рд░реНрдЪ', irrigation: 'реиреж-реирел рджрд┐рд╡рд╕рд╛рдВрдиреА' },
    pa: { name: 'ри╕ри░рйЛриВ', sow: 'риЕриХридрйВримри░- риири╡рй░римри░', harvest: 'рилри╝ри░ри╡ри░рйА- риори╛ри░риЪ', irrigation: '20-25 рижри┐риири╛риВ ри╡ри┐риЪ' }
  },
  sugarcane: {
    hi: { name: 'рдЧрдиреНрдирд╛', sow: 'рдлрд░рд╡рд░реА- рдорд╛рд░реНрдЪ', harvest: 'рджрд┐рд╕рдВрдмрд░- рдорд╛рд░реНрдЪ (рдЕрдЧрд▓рд╛ рд╡рд░реНрд╖)', irrigation: '12-15 рджрд┐рди рдореЗрдВ' },
    en: { name: 'Sugarcane', sow: 'Feb - Mar', harvest: 'Dec - Mar (next year)', irrigation: 'Every 12-15 days' },
    bn: { name: 'ржЖржЦ', sow: 'ржлрзЗржмрзНрж░рзБржпрж╝рж╛рж░рж┐- ржорж╛рж░рзНржЪ', harvest: 'ржбрж┐рж╕рзЗржорзНржмрж░- ржорж╛рж░рзНржЪ', irrigation: 'рззрзи-рззрзл ржжрж┐ржирзЗ' },
    mr: { name: 'рдКрд╕', sow: 'рдлреЗрдмреНрд░реБ- рдорд╛рд░реНрдЪ', harvest: 'рдбрд┐рд╕реЗрдВрдмрд░- рдорд╛рд░реНрдЪ (рдкреБрдврдЪреЗ)', irrigation: 'резреи-резрел рджрд┐рд╡рд╕рд╛рдВрдиреА' },
    pa: { name: 'риЧрй░риири╛', sow: 'рилри░ри╡ри░рйА- риори╛ри░риЪ', harvest: 'рижри╕рй░римри░- риори╛ри░риЪ', irrigation: '12-15 рижри┐риири╛риВ ри╡ри┐риЪ' }
  }
}

function getLangKey(language) {
  switch (language) {
    case 'HI': return 'hi'
    case 'BN': return 'bn'
    case 'MR': return 'mr'
    case 'PA': return 'pa'
    default: return 'en'
  }
}

const CropInfoCard = ({ selectedCrop = 'wheat', language = 'HI', theme = 'light' }) => {
  const langKey = getLangKey(language)
  const scrollRef = useRef(null)

  useEffect(() => {
    // Auto-scroll to the selected crop on mount
    const idx = Object.keys(DATA).indexOf(selectedCrop)
    if (idx > -1 && scrollRef.current) {
      const child = scrollRef.current.children[idx]
      if (child) child.scrollIntoView({ block: 'start', behavior: 'smooth' })
    }
  }, [selectedCrop])

  const labels = {
    title: language === 'HI' ? 'рдлрд╕рд▓ рдЬрд╛рдирдХрд╛рд░реА' : 'Crop Information',
    sow: language === 'HI' ? 'рдмреБрд╡рд╛рдИ' : 'Sowing',
    harvest: language === 'HI' ? 'рдХрдЯрд╛рдИ' : 'Harvest',
    irrigation: language === 'HI' ? 'рд╕рд┐рдВрдЪрд╛рдИ' : 'Irrigation',
    hint: language === 'HI' ? 'рдКрдкрд░/рдиреАрдЪреЗ рд╕реНрд╡рд╛рдЗрдк рдХрд░рдХреЗ рдЕрдиреНрдп рдлрд╕рд▓реЗрдВ рджреЗрдЦреЗрдВ' : 'Swipe up/down to view more crops'
  }

  const cropKeys = Object.keys(DATA)

  return (
    <div className={`farmer-card card-leaf-texture transition-colors duration-300 ${ theme === 'light' ? 'bg-white' : 'bg-gray-800 border-gray-700' }`}>
      <div className={`farmer-header header-amber-gradient`}>ЁЯУШ {labels.title}</div>
      <div className="mobile-card">
        <div className={`text-sm mb-3 ${ theme === 'light' ? 'text-green-700' : 'text-green-300' }`}>
          {labels.hint}
        </div>
        <div ref={scrollRef} className="max-h-80 md:max-h-96 overflow-y-auto pr-2 snap-y snap-mandatory space-y-4">
          {cropKeys.map((key) => {
            const info = DATA[key][langKey] || DATA[key].en
            const isSelected = key === selectedCrop
            const icon = key === 'rice' ? 'ЁЯМ╛' : key === 'vegetables' ? 'ЁЯем' : key === 'maize' ? 'ЁЯМ╜' : key === 'mustard' ? 'ЁЯЯб' : key === 'sugarcane' ? 'ЁЯНм' : 'ЁЯМ╛'
            return (
              <div key={key} className={`snap-start p-4 rounded-lg border ${ theme === 'light' ? 'bg-white/80 border-green-200' : 'bg-gray-700/50 border-green-700' } ${ isSelected ? 'ring-2 ring-green-500' : '' }`}>
                <div className="flex items-center space-x-3 mb-3">
                  <div className="text-2xl">{icon}</div>
                  <div className={`text-xl font-semibold ${ theme === 'light' ? 'text-gray-900' : 'text-gray-100'}`}>{info.name}</div>
                </div>
                <div className="grid grid-cols-2 gap-3">
                  <div className="p-3 rounded-lg bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-700">
                    <div className="text-xs text-green-700 dark:text-green-300">{labels.sow}</div>
                    <div className={`font-medium ${ theme === 'light' ? 'text-gray-900' : 'text-gray-100'}`}>{info.sow}</div>
                  </div>
                  <div className="p-3 rounded-lg bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-700">
                    <div className="text-xs text-green-700 dark:text-green-300">{labels.harvest}</div>
                    <div className={`font-medium ${ theme === 'light' ? 'text-gray-900' : 'text-gray-100'}`}>{info.harvest}</div>
                  </div>
                  <div className="col-span-2 p-3 rounded-lg bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-700">
                    <div className="text-xs text-green-700 dark:text-green-300">{labels.irrigation}</div>
                    <div className={`font-medium ${ theme === 'light' ? 'text-gray-900' : 'text-gray-100'}`}>{info.irrigation}</div>
                  </div>
                </div>
              </div>
            )
          })}
        </div>
      </div>
    </div>
  )
}

export default CropInfoCard
